{
  "name": "vscode-lsp-translations",
  "displayName": "lsp-translations",
  "description": "Provides autocompletion for the translations in your project (using lsp-translations, written in Rust).",
  "version": "0.2.13",
  "repository": {
    "type": "git",
    "url": "https://github.com/rbozan/vscode-lsp-translations.git"
  },
  "author": "Robin Bozan",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/rbozan/vscode-lsp-translations/issues"
  },
  "homepage": "https://github.com/rbozan/vscode-lsp-translations#readme",
  "publisher": "rbozan",
  "engines": {
    "vscode": "^1.59.0"
  },
  "icon": "assets/icon.png",
  "galleryBanner": {
    "color": "#c4dedb",
    "theme": "light"
  },
  "preview": false,
  "categories": [
    "Other"
  ],
  "keywords": [
    "i18n",
    "translate",
    "translation",
    "lsp",
    "autocompletion"
  ],
  "activationEvents": [
    "onLanguage:javascript",
    "onLanguage:javascriptreact",
    "onLanguage:typescript",
    "onLanguage:typescriptreact",
    "onLanguage:ruby",
    "onLanguage:php"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "capabilities": {
      "hoverProvider": "true"
    },
    "configuration": {
      "title": "lsp-translations",
      "properties": {
        "lsp-translations.translationFiles.include": {
          "type": "array",
          "default": [
            "./translations.json",
            "./translations/*.json",
            "./translations.yml",
            "./translations/*.yml",
            "./translations.yaml",
            "./translations/*.yaml"
          ],
          "description": "Glob patterns for the translation files which contain all the translations of your project.",
          "examples": [
            [
              "translations.json"
            ],
            [
              "translations.yml"
            ],
            [
              "./translations/*.yml"
            ]
          ]
        },
        "lsp-translations.translationFiles.exclude": {
          "type": "array",
          "default": [],
          "description": "Glob patterns for the files which match the patterns in `lsp-translations.translationFiles.include` but should not be included as translation file.",
          "examples": [
            [
              "translations.config.json"
            ],
            [
              "translations.config.yml"
            ]
          ]
        },
        "lsp-translations.fileName.details": {
          "type": "string",
          "description": "An optional regex pattern for the file name which can provide extra details to the extension. Can be useful when your translation file name contains language like 'en'.",
          "examples": [
            "(?P<language>.+?)\\.json"
          ]
        },
        "lsp-translations.key.details": {
          "type": "string",
          "description": "An optional regex pattern for the key of a translation which can provide extra details to the extension. Can be useful when your translation keys contains a language like 'en'.",
          "examples": [
            "^.+?\\.(?P<language>.+?)\\."
          ]
        },
        "lsp-translations.key.filter": {
          "type": "string",
          "markdownDescription": "An optional regex pattern to filter out unneeded parts of a translation key. For example: if you have a translation key like `123.abc.key` and you only provide `key` to your translation function, you can use this setting to filter out the unneeded parts. The first regex group would be the correct key name.",
          "examples": [
            "^.+?\\..+?\\.(.+$)"
          ]
        },
        "lsp-translations.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "@napi-rs/triples": "^1.0.3",
    "cross-fetch": "^3.1.4",
    "fetch-retry": "^5.0.1",
    "tar-fs": "^2.1.1",
    "unzipper": "^0.10.11",
    "vscode-languageclient": "^7.0.0"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/tar-fs": "^2.0.1",
    "@types/unzipper": "^0.10.4",
    "@types/vscode": "^1.59.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "mocha": "^8.4.0",
    "typescript": "^4.3.2",
    "vscode-test": "^1.5.2"
  }
}
